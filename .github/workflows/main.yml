name: Java tests

on:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7

    - name: Setup Java
      uses: actions/setup-java@v4.2.1
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Node.js
      uses: actions/setup-node@v4.0.2
      with:
        node-version: '20'

    - name: Start frontend service
      run: |
        docker run -d --name frontend --network host -p 3000:3000 -v $PWD/application/web:/home/frontend node:20 bash -c "cd /home/frontend && npm install && npm run dev"
      env:
        API_URL: ${{ secrets.FRONTEND_API_URL }}

    - name: Start backend service
      run: |
        docker run -d --name backend --network host -p 3333:3333 -v $PWD/application/api:/home/backend node:20 bash -c "cd /home/backend && npm install && npm run dev"

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Build and Run Tests
      run: mvn clean install
      continue-on-error: true

    - name: Upload Test Reports
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: target/surefire-reports/*.xml

    - name: Generate Test Summary
      id: test-summary
      run: |
        if [ -f target/surefire-reports/TEST-*.xml ]; then
          tests=$(grep -oP '(?<=tests=")[^"]*' target/surefire-reports/TEST-*.xml)
          failures=$(grep -oP '(?<=failures=")[^"]*' target/surefire-reports/TEST-*.xml)
          errors=$(grep -oP '(?<=errors=")[^"]*' target/surefire-reports/TEST-*.xml)
          skipped=$(grep -oP '(?<=skipped=")[^"]*' target/surefire-reports/TEST-*.xml)
          echo "tests=$tests" >> $GITHUB_ENV
          echo "failures=$failures" >> $GITHUB_ENV
          echo "errors=$errors" >> $GITHUB_ENV
          echo "skipped=$skipped" >> $GITHUB_ENV
        else
          echo "tests=0" >> $GITHUB_ENV
          echo "failures=0" >> $GITHUB_ENV
          echo "errors=0" >> $GITHUB_ENV
          echo "skipped=0" >> $GITHUB_ENV
        fi

    - name: Send Slack Notification
      if: always()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: zombieplus
        SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: |
          *Pipeline Execution Report*
          - *Job Status:* ${{ job.status }}
          - *Total Tests:* ${{ env.tests }}
          - *Failures:* ${{ env.failures }}
          - *Errors:* ${{ env.errors }}
          - *Skipped:* ${{ env.skipped }}
        SLACK_TITLE: Pipeline Test Execution Report
        SLACK_USERNAME: GitHub Actions Bot
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
